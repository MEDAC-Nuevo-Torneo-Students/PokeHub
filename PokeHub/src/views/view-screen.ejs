<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Equipo Pokémon</title>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="/css/view-screen.css">
    <link rel="stylesheet" href="/css/header_abierto.css">
    <script src="/jscript/load_header.js"></script>
    <script src="/jscript/go_to_links.js"></script>
    <script src="/jscript/dark-mode.js"></script>
    <script src="/jscript/menu-perfil.js"></script>
    <script src="/jscript/load_pokeinfo.js"></script>
    <link rel="stylesheet" href="/css/header_abierto.css">
    <link rel="stylesheet" href="/css/footer_abierto.css">

    <div id="header-container"></div>
    
</head>

<body>
    <div id = "espacio"></div>
    
    <% datos.forEach(function(dato) {
        if (dato.team_id == 3) {%>
            <div class="container">
                <div class="head">
                    <div class="pokemon-card">
                        <div class="frame"><img id="pokemonImage"
                                src="<%= dato.pokemon_photo %>" 
                                height="100%"></div>
                        <div class="pokemon-details">
                            <ul class="pokemon-list">
                                <li><img src="https://www.serebii.net/itemdex/sprites/sv/pokeball.png">
                                    <span id = "name"><%= dato.id_pokemon %></span></li>
                                <li><img src="https://www.serebii.net/itemdex/sprites/pgl/swampertite.png">
                                    <span id = "item"><%= dato.id_item %></span></li>
                                <li><img src="https://www.serebii.net/itemdex/sprites/sv/abilitycapsule.png">
                                    <span id = "ability"><%= dato.id_ability %></span></li>
                                <li><img src="https://www.serebii.net/itemdex/sprites/sv/jollymint.png">
                                    <span id = "nature"><%= dato.id_nature %></span></li>
                            </ul>
                        </div>

                        <div class="details-column">
                            <ul class="pokemon-list">
                                <li><img data-id="<%= dato.id_move_1 %>" id="imgmove">
                                    <span id = "move"><%= dato.id_move_1 %></span></li>
                                <li><img data-id="<%= dato.id_move_2 %>" id="imgmove">
                                    <span id = "move"><%= dato.id_move_2 %></span></li>
                                <li><img data-id="<%= dato.id_move_3 %>" id="imgmove"> 
                                    <span id = "move"><%= dato.id_move_3 %></span></li>
                                <li><img data-id="<%= dato.id_move_4 %>" id="imgmove">
                                    <span id = "move"><%= dato.id_move_4 %></span></li>
                            </ul>
                        </div>
                        <div class="stats">
                            <table>
                                <tr>
                                    <th></th>
                                    <th>Hp</th>
                                    <th>Atk</th>
                                    <th>Def</th>
                                    <th>SpA</th>
                                    <th>SpD</th>
                                    <th>Spe</th>
                                </tr>
                                <tr>
                                    <th>IVs</th>
                                    <td><%= dato.hp_ivs %></td>
                                    <td><%= dato.atk_ivs %></td>
                                    <td><%= dato.def_ivs %></td>
                                    <td><%= dato.spa_ivs %></td>
                                    <td><%= dato.spd_ivs %></td>
                                    <td><%= dato.spe_ivs %></td>
                                </tr>
                                <tr>
                                    <th>EVs</th>
                                    <td><%= dato.hp_evs %></td>
                                    <td><%= dato.atk_evs %></td>
                                    <td><%= dato.def_evs %></td>
                                    <td><%= dato.spa_evs %></td>
                                    <td><%= dato.spd_evs %></td>
                                    <td><%= dato.spe_evs %></td>
                                </tr>
                                <tr>
                                    <th>Total</th>
                                    <td>174</td>
                                    <td>202</td>
                                    <td>130</td>
                                    <td>90</td>
                                    <td>130</td>
                                    <td>134</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

            </div>

            <% }}); %>
            <div class="right-panel">
                <div class="user-card">
                    <i>Jjrajjr</i>
                </div>
                <div class="import-card">
                    <a>Import</a>
                </div>
                <div class="team-card">
                    <a>Rain Team</a>
                </div>
            </div>


            </div>
            <div class="team-description">
                <a>-Pelipper is the newest Drizzle user in the games, as it has gained the Drizzle ability in the 7th
                    Generation. While Politoed is more defensive in nature, Pelipper is a rain setter that barring from
                    using
                    Tailwind to increase the speed of its teammates, will spend the rest of its time on the field going
                    for
                    damaging moves. We saw how popular Pelipper was during the VGC 2017 format and what makes it
                    especially
                    useful is that most Rain teams in the past would struggle with grass types since the flying typing
                    adds a
                    new dynamic to the interaction.<br><br>

                    -Swampert has received a major buff in the way Mega Evolved Pokemon interacts with weather upon Mega
                    Evolving. You can check out this video for more info, but what happens is once Swampert Mega Evolves
                    in the
                    rain, it automatically gains the Swift Swim ability and the speed boost in the rain. This alone
                    makes it a
                    terrifying Pokemon as Swampert can become the fastest Pokemon on the field and threaten with some
                    big
                    damage. Check out this pastebin for sample sets.</a>

            </div>
            <div id="footer-container"></div>
            <script>
                async function cargarNombresPokemon() {
            const spans = document.querySelectorAll('.pokemon-list #name');
            for (const span of spans) {
                const id = span.textContent.trim();
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
                    const data = await response.json();
                    const nombre = data.name;
                    span.textContent = nombre;
                } catch (error) {
                    console.error(`Error al cargar el nombre del Pokémon ${id}:`, error);
                    span.textContent = "Desconocido";
                }
            }
        }
            
                async function cargarAbilitysPokemon() {
                    const spans = document.querySelectorAll('.pokemon-list #ability');
            for (const span of spans) {
                const id = span.textContent.trim();
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/ability/${id}`);
                    const data = await response.json();
                    const nombre = data.name;
                    span.textContent = nombre;
                } catch (error) {
                    console.error(`Error al cargar el nombre del Pokémon ${id}:`, error);
                    span.textContent = "Desconocido";
                }
            }
                }
                async function cargarItemsPokemon() {
                    const spans = document.querySelectorAll('.pokemon-list #item');
            for (const span of spans) {
                const id = span.textContent.trim();
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/item/${id}`);
                    const data = await response.json();
                    const nombre = data.name;
                    span.textContent = nombre;
                } catch (error) {
                    console.error(`Error al cargar el nombre del Pokémon ${id}:`, error);
                    span.textContent = "Desconocido";
                }
            }
                }
                async function cargarMovesPokemon() {
                    const spans = document.querySelectorAll('.pokemon-list #move');
            for (const span of spans) {
                const id = span.textContent.trim();
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/move/${id}`);
                    const data = await response.json();
                    const nombre = data.name;
                    span.textContent = nombre;
                } catch (error) {
                    console.error(`Error al cargar el nombre del Pokémon ${id}:`, error);
                    span.textContent = "Desconocido";
                }
            }
                }
                
                async function cargarNaturesPokemon() {
                    const spans = document.querySelectorAll('.pokemon-list #nature');
            for (const span of spans) {
                const id = span.textContent.trim();
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/nature/${id}`);
                    const data = await response.json();
                    const nombre = data.name;
                    span.textContent = nombre;
                } catch (error) {
                    console.error(`Error al cargar el nombre del Pokémon ${id}:`, error);
                    span.textContent = "Desconocido";
                }
            }
                }
                async function cargarImagenesPokemon() {
            const imgs = document.querySelectorAll('.pokemon-card #imgmove');
            for (const img of imgs) {
                const id = img.getAttribute('data-id');
                try {
                    const response = await fetch(`https://pokeapi.co/api/v2/move/${id}`);
                    const data = await response.json();
                    const imagenUrl = data.type.name;
                    img.src = "https://www.serebii.net/pokedex-sv/type/icon/"+imagenUrl+".png";
                } catch (error) {
                    console.error(`Error al cargar la imagen del Pokémon ${id}:`, error);
                    // Aquí puedes manejar el error como prefieras, por ejemplo, mostrar una imagen de error genérica.
                    img.src = 'src\img\MissingNo.png';
                }
            }
        }

        cargarImagenesPokemon();
        cargarItemsPokemon();
        cargarNombresPokemon();
        cargarAbilitysPokemon();
        cargarMovesPokemon();
        cargarNaturesPokemon();
            
            </script>
</body>
<script src="/jscript/load_footer.js"></script>
<script src="/jscript/pokebal_animation.js"></script>


</html>